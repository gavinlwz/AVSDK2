//
//  tdav_codec_audio_biquad_filter.h
//  youme_voice_engine
//
//  Created by paul on 30/09/16.
//  Copyright © 2016 youme. All rights reserved.
//

#ifndef tdav_codec_audio_biquad_filter_h
#define tdav_codec_audio_biquad_filter_h

#ifdef __cplusplus
extern "C" {
#endif
    
#include <sys/types.h>
    
#define MAXDB          40
#define FSTEP          10
#define FS             16000
#define COS_SIN_TBLSZ  FS/2/FSTEP+1
#define PI             3.1415926535
#define Q14_ONE        0x4000 // Q14 one
#define Q14_ONE_1      0x3fff
#define Q13_ONE        0x2000 // Q13 one
#define Q13_ONE_1      0x1fff
#define Q12_ONE        0x1000 // Q12 one
#define Q12_ONE_1      0x0fff
#define Q11_ONE        0x0800 // Q11 one
#define Q11_ONE_1      0x07ff
#define Q29_ONE        0x20000000
#define Q29_ONE_1      0x1fffffff
    
enum FILTER_TYPE {
    BIQUAD_LPF = 0,
    BIQUAD_HPF,
    BIQUAD_PEQ,
    BIQUAD_NUM
};

typedef struct biquad_filter_s
{
    int16_t    i2Fs;
    int16_t    i2Fc;
    int16_t    i2Scale;
    int32_t    i4FilterCoeffs[5];
    int16_t    i2History[4]; // 0~1: x_history, 2~3: y_history
    float      fHistory[4]; // 0~1: x_history, 2~3: y_history
} biquad_filter_t;

// cos(2*pi*fc/fs), 20Hz/Step, Q30
const uint32_t CosTbl[COS_SIN_TBLSZ] = {
    0x40000000, 0x3fffdfa9, 0x3fff7ea3, 0x3ffedcf0, 0x3ffdfa8f, 0x3ffcd782, 0x3ffb73ca, 0x3ff9cf68, 0x3ff7ea5d, 0x3ff5c4ad, 0x3ff35e58, 0x3ff0b762, 0x3fedcfcc, 0x3feaa79b, 0x3fe73ed1, 0x3fe39571,
    0x3fdfab80, 0x3fdb8101, 0x3fd715f8, 0x3fd26a6a, 0x3fcd7e5c, 0x3fc851d3, 0x3fc2e4d3, 0x3fbd3763, 0x3fb74988, 0x3fb11b48, 0x3faaaca9, 0x3fa3fdb2, 0x3f9d0e69, 0x3f95ded6, 0x3f8e6f00, 0x3f86beef,
    0x3f7ecea9, 0x3f769e38, 0x3f6e2da3, 0x3f657cf2, 0x3f5c8c30, 0x3f535b64, 0x3f49ea99, 0x3f4039d7, 0x3f364928, 0x3f2c1897, 0x3f21a82e, 0x3f16f7f7, 0x3f0c07fd, 0x3f00d84b, 0x3ef568ec, 0x3ee9b9ed,
    0x3eddcb58, 0x3ed19d3b, 0x3ec52fa0, 0x3eb88295, 0x3eab9627, 0x3e9e6a62, 0x3e90ff54, 0x3e83550b, 0x3e756b94, 0x3e6742fd, 0x3e58db55, 0x3e4a34ab, 0x3e3b4f0c, 0x3e2c2a88, 0x3e1cc72f, 0x3e0d2510,
    0x3dfd443a, 0x3ded24be, 0x3ddcc6ad, 0x3dcc2a16, 0x3dbb4f0a, 0x3daa359b, 0x3d98ddd9, 0x3d8747d7, 0x3d7573a6, 0x3d636157, 0x3d5110ff, 0x3d3e82ae, 0x3d2bb677, 0x3d18ac6e, 0x3d0564a6, 0x3cf1df32,
    0x3cde1c27, 0x3cca1b97, 0x3cb5dd97, 0x3ca1623c, 0x3c8ca99b, 0x3c77b3c8, 0x3c6280d8, 0x3c4d10e1, 0x3c3763f9, 0x3c217a35, 0x3c0b53ac, 0x3bf4f074, 0x3bde50a4, 0x3bc77452, 0x3bb05b96, 0x3b990687,
    0x3b81753c, 0x3b69a7ce, 0x3b519e54, 0x3b3958e6, 0x3b20d79e, 0x3b081a94, 0x3aef21e1, 0x3ad5ed9f, 0x3abc7de6, 0x3aa2d2d0, 0x3a88ec78, 0x3a6ecaf7, 0x3a546e69, 0x3a39d6e7, 0x3a1f048c, 0x3a03f774,
    0x39e8afba, 0x39cd2d79, 0x39b170ce, 0x399579d4, 0x397948a7, 0x395cdd65, 0x39403829, 0x39235911, 0x3906403a, 0x38e8edc2, 0x38cb61c5, 0x38ad9c63, 0x388f9db8, 0x387165e3, 0x3852f503, 0x38344b37,
    0x3815689d, 0x37f64d55, 0x37d6f97e, 0x37b76d38, 0x3797a8a3, 0x3777abde, 0x3757770b, 0x37370a49, 0x371665ba, 0x36f5897e, 0x36d475b7, 0x36b32a86, 0x3691a80d, 0x366fee6e, 0x364dfdca, 0x362bd644,
    0x360977ff, 0x35e6e31d, 0x35c417c1, 0x35a1160e, 0x357dde29, 0x355a7033, 0x3536cc52, 0x3512f2a9, 0x34eee35c, 0x34ca9e91, 0x34a6246a, 0x3481750e, 0x345c90a2, 0x3437774a, 0x3412292d, 0x33eca66f,
    0x33c6ef37, 0x33a103ab, 0x337ae3f2, 0x33549031, 0x332e0890, 0x33074d35, 0x32e05e48, 0x32b93bf0, 0x3291e654, 0x326a5d9d, 0x3242a1f2, 0x321ab37b, 0x31f29261, 0x31ca3ecc, 0x31a1b8e6, 0x317900d6,
    0x315016c7, 0x3126fae1, 0x30fdad4e, 0x30d42e38, 0x30aa7dc8, 0x30809c2a, 0x30568987, 0x302c4609, 0x3001d1dc, 0x2fd72d2a, 0x2fac581f, 0x2f8152e5, 0x2f561da9, 0x2f2ab895, 0x2eff23d7, 0x2ed35f99,
    0x2ea76c08, 0x2e7b4950, 0x2e4ef79e, 0x2e227720, 0x2df5c801, 0x2dc8ea6f, 0x2d9bde97, 0x2d6ea4a7, 0x2d413ccd, 0x2d13a736, 0x2ce5e411, 0x2cb7f38b, 0x2c89d5d4, 0x2c5b8b19, 0x2c2d138a, 0x2bfe6f55,
    0x2bcf9eaa, 0x2ba0a1b8, 0x2b7178af, 0x2b4223bd, 0x2b12a314, 0x2ae2f6e2, 0x2ab31f59, 0x2a831ca8, 0x2a52ef01, 0x2a229692, 0x29f2138f, 0x29c16627, 0x29908e8c, 0x295f8cef, 0x292e6182, 0x28fd0c76,
    0x28cb8dfd, 0x2899e64a, 0x2868158e, 0x28361bfc, 0x2803f9c6, 0x27d1af1f, 0x279f3c3a, 0x276ca14a, 0x2739de82, 0x2706f415, 0x26d3e236, 0x26a0a91a, 0x266d48f4, 0x2639c1f8, 0x2606145a, 0x25d2404e,
    0x259e4609, 0x256a25bf, 0x2535dfa5, 0x250173f0, 0x24cce2d4, 0x24982c87, 0x2463513f, 0x242e512f, 0x23f92c8f, 0x23c3e394, 0x238e7673, 0x2358e563, 0x2323309a, 0x22ed584e, 0x22b75cb5, 0x22813e06,
    0x224afc78, 0x22149842, 0x21de119a, 0x21a768b7, 0x21709dd2, 0x2139b121, 0x2102a2db, 0x20cb7339, 0x20942272, 0x205cb0be, 0x20251e56, 0x1fed6b70, 0x1fb59846, 0x1f7da510, 0x1f459207, 0x1f0d5f63,
    0x1ed50d5d, 0x1e9c9c2d, 0x1e640c0e, 0x1e2b5d38, 0x1df28fe4, 0x1db9a44c, 0x1d809aaa, 0x1d477336, 0x1d0e2e2b, 0x1cd4cbc3, 0x1c9b4c37, 0x1c61afc3, 0x1c27f69f, 0x1bee2106, 0x1bb42f33, 0x1b7a2161,
    0x1b3ff7c9, 0x1b05b2a7, 0x1acb5236, 0x1a90d6b1, 0x1a564052, 0x1a1b8f55, 0x19e0c3f6, 0x19a5de6f, 0x196adefc, 0x192fc5da, 0x18f49343, 0x18b94773, 0x187de2a7, 0x1842651a, 0x1806cf08, 0x17cb20ae,
    0x178f5a49, 0x17537c13, 0x1717864b, 0x16db792c, 0x169f54f3, 0x166319de, 0x1626c828, 0x15ea600f, 0x15ade1d0, 0x15714da8, 0x1534a3d5, 0x14f7e493, 0x14bb101f, 0x147e26b9, 0x1441289c, 0x14041607,
    0x13c6ef37, 0x1389b46b, 0x134c65df, 0x130f03d3, 0x12d18e83, 0x1294062f, 0x12566b14, 0x1218bd71, 0x11dafd83, 0x119d2b8a, 0x115f47c4, 0x1121526f, 0x10e34bca, 0x10a53414, 0x10670b8b, 0x1028d26e,
    0x0fea88fd, 0x0fac2f76, 0x0f6dc618, 0x0f2f4d22, 0x0ef0c4d3, 0x0eb22d6b, 0x0e738728, 0x0e34d24b, 0x0df60f12, 0x0db73dbd, 0x0d785e8b, 0x0d3971bd, 0x0cfa7790, 0x0cbb7046, 0x0c7c5c1e, 0x0c3d3b58,
    0x0bfe0e33, 0x0bbed4ef, 0x0b7f8fcc, 0x0b403f0a, 0x0b00e2ea, 0x0ac17baa, 0x0a82098c, 0x0a428ccf, 0x0a0305b4, 0x09c3747a, 0x0983d962, 0x094434ad, 0x0904869a, 0x08c4cf6a, 0x08850f5d, 0x084546b4,
    0x080575af, 0x07c59c8f, 0x0785bb94, 0x0745d2fe, 0x0705e30f, 0x06c5ec07, 0x0685ee27, 0x0645e9af, 0x0605dee0, 0x05c5cdfb, 0x0585b740, 0x05459af0, 0x0505794d, 0x04c55296, 0x0485270d, 0x0444f6f2,
    0x0404c287, 0x03c48a0c, 0x03844dc2, 0x03440deb, 0x0303cac6, 0x02c38496, 0x02833b9a, 0x0242f015, 0x0202a246, 0x01c2526f, 0x018200d1, 0x0141adad, 0x01015944, 0x00c103d6, 0x0080ada6, 0x004056f3,
    0x00000000, 0xffbfa90d, 0xff7f525a, 0xff3efc2a, 0xfefea6bc, 0xfebe5253, 0xfe7dff2f, 0xfe3dad91, 0xfdfd5dba, 0xfdbd0feb, 0xfd7cc466, 0xfd3c7b6a, 0xfcfc353a, 0xfcbbf215, 0xfc7bb23e, 0xfc3b75f4,
    0xfbfb3d79, 0xfbbb090e, 0xfb7ad8f3, 0xfb3aad6a, 0xfafa86b3, 0xfaba6510, 0xfa7a48c0, 0xfa3a3205, 0xf9fa2120, 0xf9ba1651, 0xf97a11d9, 0xf93a13f9, 0xf8fa1cf1, 0xf8ba2d02, 0xf87a446c, 0xf83a6371,
    0xf7fa8a51, 0xf7bab94c, 0xf77af0a3, 0xf73b3096, 0xf6fb7966, 0xf6bbcb53, 0xf67c269e, 0xf63c8b86, 0xf5fcfa4c, 0xf5bd7331, 0xf57df674, 0xf53e8456, 0xf4ff1d16, 0xf4bfc0f6, 0xf4807034, 0xf4412b11,
    0xf401f1cd, 0xf3c2c4a8, 0xf383a3e2, 0xf3448fba, 0xf3058870, 0xf2c68e43, 0xf287a175, 0xf248c243, 0xf209f0ee, 0xf1cb2db5, 0xf18c78d8, 0xf14dd295, 0xf10f3b2d, 0xf0d0b2de, 0xf09239e8, 0xf053d08a,
    0xf0157703, 0xefd72d92, 0xef98f475, 0xef5acbec, 0xef1cb436, 0xeedead91, 0xeea0b83c, 0xee62d476, 0xee25027d, 0xede7428f, 0xeda994ec, 0xed6bf9d1, 0xed2e717d, 0xecf0fc2d, 0xecb39a21, 0xec764b95,
    0xec3910c9, 0xebfbe9f9, 0xebbed764, 0xeb81d947, 0xeb44efe1, 0xeb081b6d, 0xeacb5c2b, 0xea8eb258, 0xea521e30, 0xea159ff1, 0xe9d937d8, 0xe99ce622, 0xe960ab0d, 0xe92486d4, 0xe8e879b5, 0xe8ac83ed,
    0xe870a5b7, 0xe834df52, 0xe7f930f8, 0xe7bd9ae6, 0xe7821d59, 0xe746b88d, 0xe70b6cbd, 0xe6d03a26, 0xe6952104, 0xe65a2191, 0xe61f3c0a, 0xe5e470ab, 0xe5a9bfae, 0xe56f294f, 0xe534adca, 0xe4fa4d59,
    0xe4c00837, 0xe485de9f, 0xe44bd0cd, 0xe411defa, 0xe3d80961, 0xe39e503d, 0xe364b3c9, 0xe32b343d, 0xe2f1d1d5, 0xe2b88cca, 0xe27f6556, 0xe2465bb4, 0xe20d701c, 0xe1d4a2c8, 0xe19bf3f2, 0xe16363d3,
    0xe12af2a3, 0xe0f2a09d, 0xe0ba6df9, 0xe0825af0, 0xe04a67ba, 0xe0129490, 0xdfdae1aa, 0xdfa34f42, 0xdf6bdd8e, 0xdf348cc7, 0xdefd5d25, 0xdec64edf, 0xde8f622e, 0xde589749, 0xde21ee66, 0xddeb67be,
    0xddb50388, 0xdd7ec1fa, 0xdd48a34b, 0xdd12a7b2, 0xdcdccf66, 0xdca71a9d, 0xdc71898d, 0xdc3c1c6c, 0xdc06d371, 0xdbd1aed1, 0xdb9caec1, 0xdb67d379, 0xdb331d2c, 0xdafe8c10, 0xdaca205b, 0xda95da41,
    0xda61b9f7, 0xda2dbfb2, 0xd9f9eba6, 0xd9c63e08, 0xd992b70c, 0xd95f56e6, 0xd92c1dca, 0xd8f90beb, 0xd8c6217e, 0xd8935eb6, 0xd860c3c6, 0xd82e50e1, 0xd7fc063a, 0xd7c9e404, 0xd797ea72, 0xd76619b6,
    0xd7347203, 0xd702f38a, 0xd6d19e7e, 0xd6a07311, 0xd66f7174, 0xd63e99d9, 0xd60dec71, 0xd5dd696e, 0xd5ad10ff, 0xd57ce358, 0xd54ce0a7, 0xd51d091e, 0xd4ed5cec, 0xd4bddc43, 0xd48e8751, 0xd45f5e48,
    0xd4306156, 0xd40190ab, 0xd3d2ec76, 0xd3a474e7, 0xd3762a2c, 0xd3480c75, 0xd31a1bef, 0xd2ec58ca, 0xd2bec333, 0xd2915b59, 0xd2642169, 0xd2371591, 0xd20a37ff, 0xd1dd88e0, 0xd1b10862, 0xd184b6b0,
    0xd15893f8, 0xd12ca067, 0xd100dc29, 0xd0d5476b, 0xd0a9e257, 0xd07ead1b, 0xd053a7e1, 0xd028d2d6, 0xcffe2e24, 0xcfd3b9f7, 0xcfa97679, 0xcf7f63d6, 0xcf558238, 0xcf2bd1c8, 0xcf0252b2, 0xced9051f,
    0xceafe939, 0xce86ff2a, 0xce5e471a, 0xce35c134, 0xce0d6d9f, 0xcde54c85, 0xcdbd5e0e, 0xcd95a263, 0xcd6e19ac, 0xcd46c410, 0xcd1fa1b8, 0xccf8b2cb, 0xccd1f770, 0xccab6fcf, 0xcc851c0e, 0xcc5efc55,
    0xcc3910c9, 0xcc135991, 0xcbedd6d3, 0xcbc888b6, 0xcba36f5e, 0xcb7e8af2, 0xcb59db96, 0xcb35616f, 0xcb111ca4, 0xcaed0d57, 0xcac933ae, 0xcaa58fcd, 0xca8221d7, 0xca5ee9f2, 0xca3be83f, 0xca191ce3,
    0xc9f68801, 0xc9d429bc, 0xc9b20236, 0xc9901192, 0xc96e57f3, 0xc94cd57a, 0xc92b8a49, 0xc90a7682, 0xc8e99a46, 0xc8c8f5b7, 0xc8a888f5, 0xc8885422, 0xc868575d, 0xc84892c8, 0xc8290682, 0xc809b2ab,
    0xc7ea9763, 0xc7cbb4c9, 0xc7ad0afd, 0xc78e9a1d, 0xc7706248, 0xc752639d, 0xc7349e3b, 0xc717123e, 0xc6f9bfc6, 0xc6dca6ef, 0xc6bfc7d7, 0xc6a3229b, 0xc686b759, 0xc66a862c, 0xc64e8f32, 0xc632d287,
    0xc6175046, 0xc5fc088c, 0xc5e0fb74, 0xc5c62919, 0xc5ab9197, 0xc5913509, 0xc5771388, 0xc55d2d30, 0xc543821a, 0xc52a1261, 0xc510de1f, 0xc4f7e56c, 0xc4df2862, 0xc4c6a71a, 0xc4ae61ac, 0xc4965832,
    0xc47e8ac4, 0xc466f979, 0xc44fa46a, 0xc4388bae, 0xc421af5c, 0xc40b0f8c, 0xc3f4ac54, 0xc3de85cb, 0xc3c89c07, 0xc3b2ef1f, 0xc39d7f28, 0xc3884c38, 0xc3735665, 0xc35e9dc4, 0xc34a2269, 0xc335e469,
    0xc321e3d9, 0xc30e20ce, 0xc2fa9b5a, 0xc2e75392, 0xc2d44989, 0xc2c17d52, 0xc2aeef01, 0xc29c9ea9, 0xc28a8c5a, 0xc278b829, 0xc2672227, 0xc255ca65, 0xc244b0f6, 0xc233d5ea, 0xc2233953, 0xc212db42,
    0xc202bbc6, 0xc1f2daf0, 0xc1e338d1, 0xc1d3d578, 0xc1c4b0f4, 0xc1b5cb55, 0xc1a724ab, 0xc198bd03, 0xc18a946c, 0xc17caaf5, 0xc16f00ac, 0xc161959e, 0xc15469d9, 0xc1477d6b, 0xc13ad060, 0xc12e62c5,
    0xc12234a8, 0xc1164613, 0xc10a9714, 0xc0ff27b5, 0xc0f3f803, 0xc0e90809, 0xc0de57d2, 0xc0d3e769, 0xc0c9b6d8, 0xc0bfc629, 0xc0b61567, 0xc0aca49c, 0xc0a373d0, 0xc09a830e, 0xc091d25d, 0xc08961c8,
    0xc0813157, 0xc0794111, 0xc0719100, 0xc06a212a, 0xc062f197, 0xc05c024e, 0xc0555357, 0xc04ee4b8, 0xc048b678, 0xc042c89d, 0xc03d1b2d, 0xc037ae2d, 0xc03281a4, 0xc02d9596, 0xc028ea08, 0xc0247eff,
    0xc0205480, 0xc01c6a8f, 0xc018c12f, 0xc0155865, 0xc0123034, 0xc00f489e, 0xc00ca1a8, 0xc00a3b53, 0xc00815a3, 0xc0063098, 0xc0048c36, 0xc003287e, 0xc0020571, 0xc0012310, 0xc000815d, 0xc0002057,
    0xc0000000, 
};

// sin(2*pi*fc/fs), 20Hz/Step, Q30
const uint32_t SinTbl[COS_SIN_TBLSZ] = {
    0x00000000, 0x004056f3, 0x0080ada6, 0x00c103d6, 0x01015944, 0x0141adad, 0x018200d1, 0x01c2526f, 0x0202a246, 0x0242f015, 0x02833b9a, 0x02c38496, 0x0303cac6, 0x03440deb, 0x03844dc2, 0x03c48a0c,
    0x0404c287, 0x0444f6f2, 0x0485270d, 0x04c55296, 0x0505794d, 0x05459af0, 0x0585b740, 0x05c5cdfb, 0x0605dee0, 0x0645e9af, 0x0685ee27, 0x06c5ec07, 0x0705e30f, 0x0745d2fe, 0x0785bb94, 0x07c59c8f,
    0x080575af, 0x084546b4, 0x08850f5d, 0x08c4cf6a, 0x0904869a, 0x094434ad, 0x0983d962, 0x09c3747a, 0x0a0305b4, 0x0a428ccf, 0x0a82098c, 0x0ac17baa, 0x0b00e2ea, 0x0b403f0a, 0x0b7f8fcc, 0x0bbed4ef,
    0x0bfe0e33, 0x0c3d3b58, 0x0c7c5c1e, 0x0cbb7046, 0x0cfa7790, 0x0d3971bd, 0x0d785e8b, 0x0db73dbd, 0x0df60f12, 0x0e34d24b, 0x0e738728, 0x0eb22d6b, 0x0ef0c4d3, 0x0f2f4d22, 0x0f6dc618, 0x0fac2f76,
    0x0fea88fd, 0x1028d26e, 0x10670b8b, 0x10a53414, 0x10e34bca, 0x1121526f, 0x115f47c4, 0x119d2b8a, 0x11dafd83, 0x1218bd71, 0x12566b14, 0x1294062f, 0x12d18e83, 0x130f03d3, 0x134c65df, 0x1389b46b,
    0x13c6ef37, 0x14041607, 0x1441289c, 0x147e26b9, 0x14bb101f, 0x14f7e493, 0x1534a3d5, 0x15714da8, 0x15ade1d0, 0x15ea600f, 0x1626c828, 0x166319de, 0x169f54f3, 0x16db792c, 0x1717864b, 0x17537c13,
    0x178f5a49, 0x17cb20ae, 0x1806cf08, 0x1842651a, 0x187de2a7, 0x18b94773, 0x18f49343, 0x192fc5da, 0x196adefc, 0x19a5de6f, 0x19e0c3f6, 0x1a1b8f55, 0x1a564052, 0x1a90d6b1, 0x1acb5236, 0x1b05b2a7,
    0x1b3ff7c9, 0x1b7a2161, 0x1bb42f33, 0x1bee2106, 0x1c27f69f, 0x1c61afc3, 0x1c9b4c37, 0x1cd4cbc3, 0x1d0e2e2b, 0x1d477336, 0x1d809aaa, 0x1db9a44c, 0x1df28fe4, 0x1e2b5d38, 0x1e640c0e, 0x1e9c9c2d,
    0x1ed50d5d, 0x1f0d5f63, 0x1f459207, 0x1f7da510, 0x1fb59846, 0x1fed6b70, 0x20251e56, 0x205cb0be, 0x20942272, 0x20cb7339, 0x2102a2db, 0x2139b121, 0x21709dd2, 0x21a768b7, 0x21de119a, 0x22149842,
    0x224afc78, 0x22813e06, 0x22b75cb5, 0x22ed584e, 0x2323309a, 0x2358e563, 0x238e7673, 0x23c3e394, 0x23f92c8f, 0x242e512f, 0x2463513f, 0x24982c87, 0x24cce2d4, 0x250173f0, 0x2535dfa5, 0x256a25bf,
    0x259e4609, 0x25d2404e, 0x2606145a, 0x2639c1f8, 0x266d48f4, 0x26a0a91a, 0x26d3e236, 0x2706f415, 0x2739de82, 0x276ca14a, 0x279f3c3a, 0x27d1af1f, 0x2803f9c6, 0x28361bfc, 0x2868158e, 0x2899e64a,
    0x28cb8dfd, 0x28fd0c76, 0x292e6182, 0x295f8cef, 0x29908e8c, 0x29c16627, 0x29f2138f, 0x2a229692, 0x2a52ef01, 0x2a831ca8, 0x2ab31f59, 0x2ae2f6e2, 0x2b12a314, 0x2b4223bd, 0x2b7178af, 0x2ba0a1b8,
    0x2bcf9eaa, 0x2bfe6f55, 0x2c2d138a, 0x2c5b8b19, 0x2c89d5d4, 0x2cb7f38b, 0x2ce5e411, 0x2d13a736, 0x2d413ccd, 0x2d6ea4a7, 0x2d9bde97, 0x2dc8ea6f, 0x2df5c801, 0x2e227720, 0x2e4ef79e, 0x2e7b4950,
    0x2ea76c08, 0x2ed35f99, 0x2eff23d7, 0x2f2ab895, 0x2f561da9, 0x2f8152e5, 0x2fac581f, 0x2fd72d2a, 0x3001d1dc, 0x302c4609, 0x30568987, 0x30809c2a, 0x30aa7dc8, 0x30d42e38, 0x30fdad4e, 0x3126fae1,
    0x315016c7, 0x317900d6, 0x31a1b8e6, 0x31ca3ecc, 0x31f29261, 0x321ab37b, 0x3242a1f2, 0x326a5d9d, 0x3291e654, 0x32b93bf0, 0x32e05e48, 0x33074d35, 0x332e0890, 0x33549031, 0x337ae3f2, 0x33a103ab,
    0x33c6ef37, 0x33eca66f, 0x3412292d, 0x3437774a, 0x345c90a2, 0x3481750e, 0x34a6246a, 0x34ca9e91, 0x34eee35c, 0x3512f2a9, 0x3536cc52, 0x355a7033, 0x357dde29, 0x35a1160e, 0x35c417c1, 0x35e6e31d,
    0x360977ff, 0x362bd644, 0x364dfdca, 0x366fee6e, 0x3691a80d, 0x36b32a86, 0x36d475b7, 0x36f5897e, 0x371665ba, 0x37370a49, 0x3757770b, 0x3777abde, 0x3797a8a3, 0x37b76d38, 0x37d6f97e, 0x37f64d55,
    0x3815689d, 0x38344b37, 0x3852f503, 0x387165e3, 0x388f9db8, 0x38ad9c63, 0x38cb61c5, 0x38e8edc2, 0x3906403a, 0x39235911, 0x39403829, 0x395cdd65, 0x397948a7, 0x399579d4, 0x39b170ce, 0x39cd2d79,
    0x39e8afba, 0x3a03f774, 0x3a1f048c, 0x3a39d6e7, 0x3a546e69, 0x3a6ecaf7, 0x3a88ec78, 0x3aa2d2d0, 0x3abc7de6, 0x3ad5ed9f, 0x3aef21e1, 0x3b081a94, 0x3b20d79e, 0x3b3958e6, 0x3b519e54, 0x3b69a7ce,
    0x3b81753c, 0x3b990687, 0x3bb05b96, 0x3bc77452, 0x3bde50a4, 0x3bf4f074, 0x3c0b53ac, 0x3c217a35, 0x3c3763f9, 0x3c4d10e1, 0x3c6280d8, 0x3c77b3c8, 0x3c8ca99b, 0x3ca1623c, 0x3cb5dd97, 0x3cca1b97,
    0x3cde1c27, 0x3cf1df32, 0x3d0564a6, 0x3d18ac6e, 0x3d2bb677, 0x3d3e82ae, 0x3d5110ff, 0x3d636157, 0x3d7573a6, 0x3d8747d7, 0x3d98ddd9, 0x3daa359b, 0x3dbb4f0a, 0x3dcc2a16, 0x3ddcc6ad, 0x3ded24be,
    0x3dfd443a, 0x3e0d2510, 0x3e1cc72f, 0x3e2c2a88, 0x3e3b4f0c, 0x3e4a34ab, 0x3e58db55, 0x3e6742fd, 0x3e756b94, 0x3e83550b, 0x3e90ff54, 0x3e9e6a62, 0x3eab9627, 0x3eb88295, 0x3ec52fa0, 0x3ed19d3b,
    0x3eddcb58, 0x3ee9b9ed, 0x3ef568ec, 0x3f00d84b, 0x3f0c07fd, 0x3f16f7f7, 0x3f21a82e, 0x3f2c1897, 0x3f364928, 0x3f4039d7, 0x3f49ea99, 0x3f535b64, 0x3f5c8c30, 0x3f657cf2, 0x3f6e2da3, 0x3f769e38,
    0x3f7ecea9, 0x3f86beef, 0x3f8e6f00, 0x3f95ded6, 0x3f9d0e69, 0x3fa3fdb2, 0x3faaaca9, 0x3fb11b48, 0x3fb74988, 0x3fbd3763, 0x3fc2e4d3, 0x3fc851d3, 0x3fcd7e5c, 0x3fd26a6a, 0x3fd715f8, 0x3fdb8101,
    0x3fdfab80, 0x3fe39571, 0x3fe73ed1, 0x3feaa79b, 0x3fedcfcc, 0x3ff0b762, 0x3ff35e58, 0x3ff5c4ad, 0x3ff7ea5d, 0x3ff9cf68, 0x3ffb73ca, 0x3ffcd782, 0x3ffdfa8f, 0x3ffedcf0, 0x3fff7ea3, 0x3fffdfa9,
    0x40000000, 0x3fffdfa9, 0x3fff7ea3, 0x3ffedcf0, 0x3ffdfa8f, 0x3ffcd782, 0x3ffb73ca, 0x3ff9cf68, 0x3ff7ea5d, 0x3ff5c4ad, 0x3ff35e58, 0x3ff0b762, 0x3fedcfcc, 0x3feaa79b, 0x3fe73ed1, 0x3fe39571,
    0x3fdfab80, 0x3fdb8101, 0x3fd715f8, 0x3fd26a6a, 0x3fcd7e5c, 0x3fc851d3, 0x3fc2e4d3, 0x3fbd3763, 0x3fb74988, 0x3fb11b48, 0x3faaaca9, 0x3fa3fdb2, 0x3f9d0e69, 0x3f95ded6, 0x3f8e6f00, 0x3f86beef,
    0x3f7ecea9, 0x3f769e38, 0x3f6e2da3, 0x3f657cf2, 0x3f5c8c30, 0x3f535b64, 0x3f49ea99, 0x3f4039d7, 0x3f364928, 0x3f2c1897, 0x3f21a82e, 0x3f16f7f7, 0x3f0c07fd, 0x3f00d84b, 0x3ef568ec, 0x3ee9b9ed,
    0x3eddcb58, 0x3ed19d3b, 0x3ec52fa0, 0x3eb88295, 0x3eab9627, 0x3e9e6a62, 0x3e90ff54, 0x3e83550b, 0x3e756b94, 0x3e6742fd, 0x3e58db55, 0x3e4a34ab, 0x3e3b4f0c, 0x3e2c2a88, 0x3e1cc72f, 0x3e0d2510,
    0x3dfd443a, 0x3ded24be, 0x3ddcc6ad, 0x3dcc2a16, 0x3dbb4f0a, 0x3daa359b, 0x3d98ddd9, 0x3d8747d7, 0x3d7573a6, 0x3d636157, 0x3d5110ff, 0x3d3e82ae, 0x3d2bb677, 0x3d18ac6e, 0x3d0564a6, 0x3cf1df32,
    0x3cde1c27, 0x3cca1b97, 0x3cb5dd97, 0x3ca1623c, 0x3c8ca99b, 0x3c77b3c8, 0x3c6280d8, 0x3c4d10e1, 0x3c3763f9, 0x3c217a35, 0x3c0b53ac, 0x3bf4f074, 0x3bde50a4, 0x3bc77452, 0x3bb05b96, 0x3b990687,
    0x3b81753c, 0x3b69a7ce, 0x3b519e54, 0x3b3958e6, 0x3b20d79e, 0x3b081a94, 0x3aef21e1, 0x3ad5ed9f, 0x3abc7de6, 0x3aa2d2d0, 0x3a88ec78, 0x3a6ecaf7, 0x3a546e69, 0x3a39d6e7, 0x3a1f048c, 0x3a03f774,
    0x39e8afba, 0x39cd2d79, 0x39b170ce, 0x399579d4, 0x397948a7, 0x395cdd65, 0x39403829, 0x39235911, 0x3906403a, 0x38e8edc2, 0x38cb61c5, 0x38ad9c63, 0x388f9db8, 0x387165e3, 0x3852f503, 0x38344b37,
    0x3815689d, 0x37f64d55, 0x37d6f97e, 0x37b76d38, 0x3797a8a3, 0x3777abde, 0x3757770b, 0x37370a49, 0x371665ba, 0x36f5897e, 0x36d475b7, 0x36b32a86, 0x3691a80d, 0x366fee6e, 0x364dfdca, 0x362bd644,
    0x360977ff, 0x35e6e31d, 0x35c417c1, 0x35a1160e, 0x357dde29, 0x355a7033, 0x3536cc52, 0x3512f2a9, 0x34eee35c, 0x34ca9e91, 0x34a6246a, 0x3481750e, 0x345c90a2, 0x3437774a, 0x3412292d, 0x33eca66f,
    0x33c6ef37, 0x33a103ab, 0x337ae3f2, 0x33549031, 0x332e0890, 0x33074d35, 0x32e05e48, 0x32b93bf0, 0x3291e654, 0x326a5d9d, 0x3242a1f2, 0x321ab37b, 0x31f29261, 0x31ca3ecc, 0x31a1b8e6, 0x317900d6,
    0x315016c7, 0x3126fae1, 0x30fdad4e, 0x30d42e38, 0x30aa7dc8, 0x30809c2a, 0x30568987, 0x302c4609, 0x3001d1dc, 0x2fd72d2a, 0x2fac581f, 0x2f8152e5, 0x2f561da9, 0x2f2ab895, 0x2eff23d7, 0x2ed35f99,
    0x2ea76c08, 0x2e7b4950, 0x2e4ef79e, 0x2e227720, 0x2df5c801, 0x2dc8ea6f, 0x2d9bde97, 0x2d6ea4a7, 0x2d413ccd, 0x2d13a736, 0x2ce5e411, 0x2cb7f38b, 0x2c89d5d4, 0x2c5b8b19, 0x2c2d138a, 0x2bfe6f55,
    0x2bcf9eaa, 0x2ba0a1b8, 0x2b7178af, 0x2b4223bd, 0x2b12a314, 0x2ae2f6e2, 0x2ab31f59, 0x2a831ca8, 0x2a52ef01, 0x2a229692, 0x29f2138f, 0x29c16627, 0x29908e8c, 0x295f8cef, 0x292e6182, 0x28fd0c76,
    0x28cb8dfd, 0x2899e64a, 0x2868158e, 0x28361bfc, 0x2803f9c6, 0x27d1af1f, 0x279f3c3a, 0x276ca14a, 0x2739de82, 0x2706f415, 0x26d3e236, 0x26a0a91a, 0x266d48f4, 0x2639c1f8, 0x2606145a, 0x25d2404e,
    0x259e4609, 0x256a25bf, 0x2535dfa5, 0x250173f0, 0x24cce2d4, 0x24982c87, 0x2463513f, 0x242e512f, 0x23f92c8f, 0x23c3e394, 0x238e7673, 0x2358e563, 0x2323309a, 0x22ed584e, 0x22b75cb5, 0x22813e06,
    0x224afc78, 0x22149842, 0x21de119a, 0x21a768b7, 0x21709dd2, 0x2139b121, 0x2102a2db, 0x20cb7339, 0x20942272, 0x205cb0be, 0x20251e56, 0x1fed6b70, 0x1fb59846, 0x1f7da510, 0x1f459207, 0x1f0d5f63,
    0x1ed50d5d, 0x1e9c9c2d, 0x1e640c0e, 0x1e2b5d38, 0x1df28fe4, 0x1db9a44c, 0x1d809aaa, 0x1d477336, 0x1d0e2e2b, 0x1cd4cbc3, 0x1c9b4c37, 0x1c61afc3, 0x1c27f69f, 0x1bee2106, 0x1bb42f33, 0x1b7a2161,
    0x1b3ff7c9, 0x1b05b2a7, 0x1acb5236, 0x1a90d6b1, 0x1a564052, 0x1a1b8f55, 0x19e0c3f6, 0x19a5de6f, 0x196adefc, 0x192fc5da, 0x18f49343, 0x18b94773, 0x187de2a7, 0x1842651a, 0x1806cf08, 0x17cb20ae,
    0x178f5a49, 0x17537c13, 0x1717864b, 0x16db792c, 0x169f54f3, 0x166319de, 0x1626c828, 0x15ea600f, 0x15ade1d0, 0x15714da8, 0x1534a3d5, 0x14f7e493, 0x14bb101f, 0x147e26b9, 0x1441289c, 0x14041607,
    0x13c6ef37, 0x1389b46b, 0x134c65df, 0x130f03d3, 0x12d18e83, 0x1294062f, 0x12566b14, 0x1218bd71, 0x11dafd83, 0x119d2b8a, 0x115f47c4, 0x1121526f, 0x10e34bca, 0x10a53414, 0x10670b8b, 0x1028d26e,
    0x0fea88fd, 0x0fac2f76, 0x0f6dc618, 0x0f2f4d22, 0x0ef0c4d3, 0x0eb22d6b, 0x0e738728, 0x0e34d24b, 0x0df60f12, 0x0db73dbd, 0x0d785e8b, 0x0d3971bd, 0x0cfa7790, 0x0cbb7046, 0x0c7c5c1e, 0x0c3d3b58,
    0x0bfe0e33, 0x0bbed4ef, 0x0b7f8fcc, 0x0b403f0a, 0x0b00e2ea, 0x0ac17baa, 0x0a82098c, 0x0a428ccf, 0x0a0305b4, 0x09c3747a, 0x0983d962, 0x094434ad, 0x0904869a, 0x08c4cf6a, 0x08850f5d, 0x084546b4,
    0x080575af, 0x07c59c8f, 0x0785bb94, 0x0745d2fe, 0x0705e30f, 0x06c5ec07, 0x0685ee27, 0x0645e9af, 0x0605dee0, 0x05c5cdfb, 0x0585b740, 0x05459af0, 0x0505794d, 0x04c55296, 0x0485270d, 0x0444f6f2,
    0x0404c287, 0x03c48a0c, 0x03844dc2, 0x03440deb, 0x0303cac6, 0x02c38496, 0x02833b9a, 0x0242f015, 0x0202a246, 0x01c2526f, 0x018200d1, 0x0141adad, 0x01015944, 0x00c103d6, 0x0080ada6, 0x004056f3,
    0x00000000, 
};
    
const int16_t dBGainTbl[2 * MAXDB + 1] = { // 10^(dBGain/40), -40~40dB, 1dB/Step, Q11
    0x00cc, 0x00d8, 0x00e5, 0x00f3, 0x0101, 0x0111, 0x0121, 0x0132, 0x0144, 0x0157, 0x016c, 0x0181, 0x0198, 0x01b0, 0x01ca, 0x01e5,
    0x0202, 0x0220, 0x0241, 0x0263, 0x0287, 0x02ae, 0x02d6, 0x0301, 0x032f, 0x035f, 0x0392, 0x03c9, 0x0402, 0x043f, 0x047f, 0x04c3,
    0x050c, 0x0558, 0x05a9, 0x05ff, 0x065a, 0x06bb, 0x0721, 0x078d, 0x0800, 0x0879, 0x08f9, 0x0982, 0x0a12, 0x0aab, 0x0b4c, 0x0bf8,
    0x0cad, 0x0d6e, 0x0e39, 0x0f11, 0x0ff6, 0x10e8, 0x11e8, 0x12f8, 0x1418, 0x1549, 0x168c, 0x17e2, 0x194c, 0x1acc, 0x1c62, 0x1e11,
    0x1fd9, 0x21bc, 0x23bc, 0x25da, 0x2818, 0x2a78, 0x2cfc, 0x2fa7, 0x327a, 0x3577, 0x38a2, 0x3bfd, 0x3f8b, 0x434f, 0x474c, 0x4b86,
    0x5000,
};
    
void vBiqTblCreate(int32_t *pi4Coeffs, int16_t i2Fs, int16_t i2Fc, int16_t i2dBGain, double Q, int16_t *pi2Scale, FILTER_TYPE eFilterType);
void vBiqFilterProc(int16_t *pi2InData, int16_t  *pi2History, int32_t *pi4Coeffs, int16_t i2Scale, int16_t i2Size);
void vBiqFilterProcFloat(int16_t *pi2InData, float *pfHistory, int32_t *pi4Coeffs, int16_t i2Scale, int16_t i2Size);
    
#define REVERB_Q   12
#define REVERB_ONE 1<<12
#define REVERB_COMB_FILT_NUM    6
#define REVERB_ALLPASS_FILT_NUM 3
#define ABS(n) ((n < 0)?(-n):(n))
const int16_t i2Damp1 = 409;             // 0.1
const int16_t i2Damp2 = 3686;            // 0.9
const int16_t i2Wet   = 3072;            // 0.75
const int16_t i2Dry   = 3277;            // 0.8
const int16_t i2FixGain  = 61;           // 0.015
const int16_t i2FeedBack = 3441;         // 0.84
const int16_t i2FeedBackAllpass = 2048;  // 0.5
const int16_t i2CombFiltDelay32K[REVERB_COMB_FILT_NUM] = {808, 874, 926, 1020, 1090, 1170}; // @32K sample rate
const int16_t i2AllpassFiltDelay32K[REVERB_ALLPASS_FILT_NUM] = {162, 248, 320}; // @32K sample rate
const int16_t i2CombFiltDelay16K[REVERB_COMB_FILT_NUM] = {404, 437, 473, 510, 545, 585}; // @16K sample rate
const int16_t i2AllpassFiltDelay16K[REVERB_ALLPASS_FILT_NUM] = {81, 124, 160}; // @16K sample rate
const int16_t i2CombFiltDelay48K[REVERB_COMB_FILT_NUM] = {1212, 1311, 1419, 1530, 1635, 1755}; // @32K sample rate
const int16_t i2AllpassFiltDelay48K[REVERB_ALLPASS_FILT_NUM] = {243, 372, 480}; // @32K sample rate
    
typedef struct reverb_filter_s
{
    int16_t    *pi2CombBuf[REVERB_COMB_FILT_NUM];
    int16_t    *pi2AllpassBuf[REVERB_ALLPASS_FILT_NUM];
    int16_t    i2CombHistoryIdx[REVERB_COMB_FILT_NUM];
    int16_t    i2CombHistoryData[REVERB_COMB_FILT_NUM];
    int16_t    i2AllpassHistoryIdx[REVERB_ALLPASS_FILT_NUM];
    tsk_bool_t bBufferRefresh;
    int16_t    i2ConstComDelayTbl[REVERB_COMB_FILT_NUM];
    int16_t    i2ConstAllpassDelayTbl[REVERB_ALLPASS_FILT_NUM];
} reverb_filter_t;

void vReverbFilterProc(void *pReverbInst, int16_t *pi2InData, int16_t i2Size);
#ifdef __cplusplus
}
#endif

#endif
