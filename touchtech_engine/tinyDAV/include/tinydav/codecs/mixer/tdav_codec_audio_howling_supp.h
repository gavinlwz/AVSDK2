//
//  tdav_codec_audio_howling_supp.h
//  youme_voice_engine
//
//  Created by paul on 29/09/16.
//  Copyright © 2016 youme. All rights reserved.
//

#ifndef tdav_codec_audio_howling_supp_h
#define tdav_codec_audio_howling_supp_h

#ifdef __cplusplus
extern "C" {
#endif
    
#include <sys/types.h>

static int16_t window_hanning[512] = { // Q14
    0, 2, 5, 9, 15, 22, 30, 39, 49, 61, 74, 88, 104, 120, 138, 157, 
    177, 199, 221, 245, 270, 296, 324, 352, 382, 413, 445, 478, 513, 548, 585, 623, 
    662, 702, 744, 786, 830, 874, 920, 967, 1015, 1064, 1114, 1165, 1217, 1270, 1325, 1380, 
    1436, 1494, 1552, 1612, 1672, 1733, 1796, 1859, 1923, 1988, 2055, 2122, 2190, 2258, 2328, 2399, 
    2470, 2543, 2616, 2690, 2765, 2841, 2917, 2995, 3073, 3152, 3231, 3312, 3393, 3474, 3557, 3640, 
    3724, 3809, 3894, 3980, 4067, 4154, 4241, 4330, 4419, 4508, 4598, 4689, 4780, 4872, 4964, 5057, 
    5150, 5243, 5337, 5432, 5527, 5622, 5717, 5813, 5910, 6007, 6104, 6201, 6299, 6397, 6495, 6593, 
    6692, 6791, 6890, 6989, 7089, 7189, 7289, 7389, 7489, 7589, 7689, 7790, 7890, 7990, 8091, 8191, 
    8292, 8393, 8493, 8593, 8694, 8794, 8894, 8994, 9094, 9194, 9294, 9394, 9493, 9592, 9691, 9790, 
    9888, 9986, 10084, 10182, 10279, 10376, 10473, 10570, 10666, 10761, 10856, 10951, 11046, 11140, 11233, 11326, 
    11419, 11511, 11603, 11694, 11785, 11875, 11964, 12053, 12142, 12229, 12316, 12403, 12489, 12574, 12659, 12743, 
    12826, 12909, 12990, 13071, 13152, 13231, 13310, 13388, 13466, 13542, 13618, 13693, 13767, 13840, 13913, 13984, 
    14055, 14125, 14193, 14261, 14328, 14395, 14460, 14524, 14587, 14650, 14711, 14771, 14831, 14889, 14947, 15003, 
    15058, 15113, 15166, 15218, 15269, 15319, 15368, 15416, 15463, 15509, 15553, 15597, 15639, 15681, 15721, 15760, 
    15798, 15835, 15870, 15905, 15938, 15970, 16001, 16031, 16059, 16087, 16113, 16138, 16162, 16184, 16206, 16226, 
    16245, 16263, 16279, 16295, 16309, 16322, 16334, 16344, 16353, 16361, 16368, 16374, 16378, 16381, 16383, 16384, 
    16383, 16381, 16378, 16374, 16368, 16361, 16353, 16344, 16334, 16322, 16309, 16295, 16279, 16263, 16245, 16226, 
    16206, 16184, 16162, 16138, 16113, 16087, 16059, 16031, 16001, 15970, 15938, 15905, 15870, 15835, 15798, 15760, 
    15721, 15681, 15639, 15597, 15553, 15509, 15463, 15416, 15368, 15319, 15269, 15218, 15166, 15113, 15058, 15003, 
    14947, 14889, 14831, 14771, 14711, 14650, 14587, 14524, 14460, 14395, 14328, 14261, 14193, 14125, 14055, 13984, 
    13913, 13840, 13767, 13693, 13618, 13542, 13466, 13388, 13310, 13231, 13152, 13071, 12990, 12909, 12826, 12743, 
    12659, 12574, 12489, 12403, 12316, 12229, 12142, 12053, 11964, 11875, 11785, 11694, 11603, 11511, 11419, 11326, 
    11233, 11140, 11046, 10951, 10856, 10761, 10666, 10570, 10473, 10376, 10279, 10182, 10084, 9986, 9888, 9790, 
    9691, 9592, 9493, 9394, 9294, 9194, 9094, 8994, 8894, 8794, 8694, 8593, 8493, 8393, 8292, 8192, 
    8091, 7990, 7890, 7790, 7689, 7589, 7489, 7389, 7289, 7189, 7089, 6989, 6890, 6791, 6692, 6593, 
    6495, 6397, 6299, 6201, 6104, 6007, 5910, 5813, 5717, 5622, 5527, 5432, 5337, 5243, 5150, 5057, 
    4964, 4872, 4780, 4689, 4598, 4508, 4419, 4330, 4241, 4154, 4067, 3980, 3894, 3809, 3724, 3640, 
    3557, 3474, 3393, 3312, 3231, 3152, 3073, 2995, 2917, 2841, 2765, 2690, 2616, 2543, 2470, 2399, 
    2328, 2258, 2190, 2122, 2055, 1988, 1923, 1859, 1796, 1733, 1672, 1612, 1552, 1494, 1436, 1380, 
    1325, 1270, 1217, 1165, 1114, 1064, 1015, 967, 920, 874, 830, 786, 744, 702, 662, 623, 
    585, 548, 513, 478, 445, 413, 382, 352, 324, 296, 270, 245, 221, 199, 177, 157, 
    138, 120, 104, 88, 74, 61, 49, 39, 30, 22, 15, 9, 5, 2, 0, 0, 
};

static int16_t window_hamming[512] = { // Q14
    1311, 1312, 1315, 1319, 1324, 1331, 1338, 1347, 1356, 1367, 1379, 1392, 1406, 1421, 1438, 1455, 
    1474, 1493, 1514, 1536, 1559, 1583, 1608, 1635, 1662, 1691, 1720, 1751, 1782, 1815, 1849, 1884, 
    1920, 1957, 1995, 2034, 2074, 2115, 2157, 2200, 2244, 2289, 2335, 2382, 2431, 2480, 2529, 2580, 
    2632, 2685, 2739, 2793, 2849, 2905, 2963, 3021, 3080, 3140, 3201, 3263, 3325, 3388, 3453, 3518, 
    3583, 3650, 3717, 3786, 3854, 3924, 3995, 4066, 4138, 4210, 4283, 4357, 4432, 4507, 4583, 4660, 
    4737, 4815, 4893, 4972, 5052, 5132, 5213, 5294, 5376, 5458, 5541, 5625, 5708, 5793, 5877, 5963, 
    6048, 6134, 6221, 6308, 6395, 6483, 6571, 6659, 6748, 6837, 6926, 7016, 7105, 7196, 7286, 7377, 
    7467, 7558, 7650, 7741, 7833, 7924, 8016, 8108, 8200, 8292, 8385, 8477, 8569, 8662, 8754, 8847, 
    8939, 9032, 9124, 9217, 9309, 9401, 9493, 9586, 9678, 9769, 9861, 9953, 10044, 10135, 10226, 10317, 
    10408, 10498, 10588, 10678, 10768, 10857, 10946, 11035, 11123, 11211, 11299, 11386, 11473, 11559, 11645, 11731, 
    11816, 11901, 11985, 12069, 12153, 12235, 12318, 12400, 12481, 12562, 12642, 12721, 12801, 12879, 12957, 13034, 
    13111, 13187, 13262, 13336, 13410, 13484, 13556, 13628, 13699, 13770, 13839, 13908, 13976, 14044, 14110, 14176, 
    14241, 14305, 14369, 14431, 14493, 14554, 14614, 14673, 14731, 14788, 14845, 14900, 14955, 15009, 15061, 15113, 
    15164, 15214, 15263, 15311, 15358, 15404, 15449, 15494, 15537, 15579, 15620, 15660, 15699, 15737, 15774, 15810, 
    15845, 15878, 15911, 15943, 15974, 16003, 16032, 16059, 16085, 16110, 16135, 16158, 16180, 16200, 16220, 16239, 
    16256, 16273, 16288, 16302, 16315, 16327, 16338, 16347, 16356, 16363, 16369, 16374, 16378, 16381, 16383, 16384, 
    16383, 16381, 16378, 16374, 16369, 16363, 16356, 16347, 16338, 16327, 16315, 16302, 16288, 16273, 16256, 16239, 
    16220, 16200, 16180, 16158, 16135, 16110, 16085, 16059, 16032, 16003, 15974, 15943, 15911, 15878, 15845, 15810, 
    15774, 15737, 15699, 15660, 15620, 15579, 15537, 15494, 15449, 15404, 15358, 15311, 15263, 15214, 15164, 15113, 
    15061, 15009, 14955, 14900, 14845, 14788, 14731, 14673, 14614, 14554, 14493, 14431, 14369, 14305, 14241, 14176, 
    14110, 14044, 13976, 13908, 13839, 13770, 13699, 13628, 13556, 13484, 13410, 13336, 13262, 13187, 13111, 13034, 
    12957, 12879, 12801, 12721, 12642, 12562, 12481, 12400, 12318, 12235, 12153, 12069, 11985, 11901, 11816, 11731, 
    11645, 11559, 11473, 11386, 11299, 11211, 11123, 11035, 10946, 10857, 10768, 10678, 10588, 10498, 10408, 10317, 
    10226, 10135, 10044, 9953, 9861, 9769, 9678, 9586, 9493, 9401, 9309, 9217, 9124, 9032, 8939, 8847, 
    8754, 8662, 8569, 8477, 8385, 8292, 8200, 8108, 8016, 7924, 7833, 7741, 7650, 7558, 7467, 7377, 
    7286, 7196, 7105, 7016, 6926, 6837, 6748, 6659, 6571, 6483, 6395, 6308, 6221, 6134, 6048, 5963, 
    5877, 5793, 5708, 5625, 5541, 5458, 5376, 5294, 5213, 5132, 5052, 4972, 4893, 4815, 4737, 4660, 
    4583, 4507, 4432, 4357, 4283, 4210, 4138, 4066, 3995, 3924, 3854, 3786, 3717, 3650, 3583, 3518, 
    3453, 3388, 3325, 3263, 3201, 3140, 3080, 3021, 2963, 2905, 2849, 2793, 2739, 2685, 2632, 2580, 
    2529, 2480, 2431, 2382, 2335, 2289, 2244, 2200, 2157, 2115, 2074, 2034, 1995, 1957, 1920, 1884, 
    1849, 1815, 1782, 1751, 1720, 1691, 1662, 1635, 1608, 1583, 1559, 1536, 1514, 1493, 1474, 1455, 
    1438, 1421, 1406, 1392, 1379, 1367, 1356, 1347, 1338, 1331, 1324, 1319, 1315, 1312, 1311, 1310, 
};

#include "webrtc/common_audio/ring_buffer.h" // Use ring buffer open source function
#define FFT_SIZE 512
    
typedef enum window_type_s
{
    WINDOW_HANNING = 0,
    WINDOW_HAMMING,
    WINDOW_NUM
} window_type_t;
    
typedef struct howling_suppression_notch_filter_s
{
    int16_t    i2Fs;
    int16_t    i2Fc;
    int16_t    i2Scale;
    int16_t    i2TimeCounter;
    int32_t    i4FilterCoeffs[5];
    int16_t    i2History[4]; // 0~1: x_history, 2~3: y_history
} howling_suppression_notch_filter_t;
    
typedef struct howling_suppression_s
{
    void       *HS_tbl;
    void       *HS_FFTInBuffer;
    void       *HS_FFTOutBuffer;
    RingBuffer *HS_RingBuffer;
    int32_t    *pSpecPow;
    uint32_t   u4SampleRate;
    uint32_t   u4Channel;
    howling_suppression_notch_filter_t *pNotchFilter;
} howling_suppression_t;

    
void tdav_codec_audio_prefft_window_processing(int16_t *pInData, int16_t *pOutData, int16_t i2Len, window_type_t eWindowType);
void tdav_codec_audio_howling_spectrum_power(int16_t *pInData, int32_t *pOutData, int16_t i2Len);
int16_t tdav_codec_audio_howling_normW32(int32_t i4Num);
int16_t tdav_codec_audio_howling_bitsU32(uint32_t u4Num);
void tdav_codec_audio_dc_remove(int16_t *pi2Data, int16_t i2Len);
    
#ifdef __cplusplus
}
#endif

#endif
